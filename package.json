{
	"name": "altwalker-model-visualizer",
	"displayName": "AltWalker Model Visualizer",
	"description": "A library for displaying JSON models for AltWalker and GraphWalker.",
	"version": "0.0.2",
	"engines": {
		"vscode": "^1.0.0"
	},
	"publisher": "Altom",
	"license": "https://gitlab.com/altom/altwalker/extensions/vscode-model-visualizer/-/blob/master/LICENSE",
	"homepage": "https://gitlab.com/altom/altwalker/extensions/vscode-model-visualizer/-/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://gitlab.com/altom/altwalker/extensions/vscode-model-visualizer"
	},
	"bugs": {
		"url": "https://gitlab.com/altom/altwalker/extensions/vscode-model-visualizer/-/issues"
	},
	"keywords": [
		"AltWalker",
		"JSON",
		"VSCode",
		"Graph",
		"GraphWalker",
		"Model",
		"Model-Visualizer",
		"Python",
		"C#",
		"Java",
		"Model-Based Testing",
		"Testing"
	],
	"icon": "images/icon.png",
	"categories": [
		"Other",
		"Snippets",
		"Formatters"
	],
	"activationEvents": [
		"onCommand:altwalker.launch"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "AltWalker Model Visualizer",
			"properties" : {
				"altwalker.layout.rankdir": {
					"type": "string",
					"enum": [
						"Top-Bottom",
						"Bottom-Top",
						"Left-Right",
						"Right-Left"
					],
					"default": "Top-Bottom",
					"description": "Direction for rank nodes."
				},
				"altwalker.layout.align": {
					"type": "string",
					"enum": [
						"Up-Left",
						"Up-Right",
						"Down-Left",
						"Down-Right"
					],
					"default": "Down-Right",
					"description": "Alignment for rank nodes."
				},
				"altwalker.layout.nodesep": {
					"type": "number",
					"default": 1,
					"maximum": 500,
					"minimum": 1,
					"description": "Number of pixels that separate nodes horizontally in the layout."
				},
				"altwalker.layout.edgesep": {
					"type": "number",
					"default": 10,
					"maximum": 500,
					"minimum": 1,
					"description": "Number of pixels that separate edges horizontally in the layout."
				},
				"altwalker.layout.ranksep": {
					"type": "number",
					"default": 50,
					"maximum": 500,
					"minimum": 1,
					"description": "Number of pixels between each rank in the layout."
				},
				"altwalker.layout.marginx": {
					"type": "number",
					"default": 1,
					"maximum": 500,
					"minimum": 1,
					"description": "Number of pixels to use as a margin around the left and right of the graph."
				},
				"altwalker.layout.marginy": {
					"type": "number",
					"default": 1,
					"maximum": 500,
					"minimum": 1,
					"description": "Number of pixels to use as a margin around the top and bottom of the graph."
				},
				"altwalker.layout.ranker": {
					"type": "string",
					"enum": [
						"Longest Path",
						"Tight Tree",
						"Network Simplex"
					],
					"default": "Network Simplex",
					"description": "Type of algorithm to assigns a rank to each node in the input graph."
				},
				"altwalker.layout.legend": {
					"type": "boolean",
					"default": true,
					"description": "Show legend."
				}
			}
		},
		"snippets": [
			{
				"language": "json",
				"path": "snippets/model.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/generator.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/vertex.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/edge.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/altwalker.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/actions.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/requirements.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/properties.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/guard.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/sharedState.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/weight.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/dependency.code-snippets"
			},
			{
				"language": "json",
				"path": "snippets/example.code-snippets"
			}
		],
		"commands": [
			{
				"command": "altwalker.launch",
				"title": "Launch Model Visualizer"
			}
		],
		"keybindings": [
			{
				"command": "altwalker.launch",
				"key": "ctrl+shift+v",
				"mac": "cmd+shift+v",
				"when": "editorLangId == json"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "altwalker.launch",
					"when": "resourceLangId == json"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.0.0",
		"@typescript-eslint/eslint-plugin": "^2.26.0",
		"@typescript-eslint/parser": "^2.26.0",
		"eslint": "^6.8.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.1",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	},
	"dependencies": {
		"d3": "^5.16.0",
		"d3-svg-legend": "^2.25.6",
		"dagre-d3": "^0.6.4",
		"vue": "^2.6.11"
	}
}
